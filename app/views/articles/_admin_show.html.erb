
  <div class="card-footer">
    <h2>Some ü™Ñ GenAI stuff coming soon... (quando funge la metti a tutti)</h2>

      <div id="my-post-content" >
        <p id="my-placeholder" >
          <b>1. ‚ùå This aaa placeholder will be replaced with API data. (bard test!)</b>
          </p>
      </div>

      <div id="my-article-synoptic" >
        <p id="my-placeholder" >2. ‚ùå This placeholder will be replaced with a synoptic of the whole article (Palm/LangChainRb).</p>
      </div>

      <div id="my-article-image-synoptic" >
        <p id="my-placeholder" >3. ‚ùå This placeholder will be replaced with information on the image (Gemini).</p>
      </div>

        <script>
          // Call the fetchApiData function after the DOM is loaded
          // disabled since AR is broken..
          //document.addEventListener('DOMContentLoaded', fetchApiData);
          //fetchApiData();
        </script>


      <%#= render_comments @article %>
      <%#= render_comment_form @article %>
      <%#= render_article_footer @article %>
    </div>

    <div class="card-footer">
        <h1>Admin/dev only: votes</h1>

        <p>Weighted Average = <b><%= @article.weighted_average %></b></p>

      <ol class="list-decimal">
      <% @article.votes_for.each do |vote| %>
        <li>

          <b><%= voter_info(vote) rescue "Err: #{$!}" %></b>
          <%= vote.inspect %></li>
      <% end %>
      </ol>

      <h2>Insights on images and videos</h2>
      It looks like it can transform Vimeo and Youtube naked urls super easy, but not attached video from disk :/

      <h3>Mentioned users:</h3>
      <%= @pipeline_body_result[:mentioned_usernames] %>

      <% @blobs = ActiveStorage::Attachment.where(record_id: @article.id) #, record_type: "Article"  %>
      <h3>Mentioned Blobbez: <%= @blobs.count %></h3>

    <p>ActiveStorage::Blob.service.name: <%= ActiveStorage::Blob.service.name rescue "Error: #{$!}" %></p>
    <p>ActiveStorage::Blob.service.primary.host: <%= ActiveStorage::Blob.service.primary.host rescue "Error: #{$!}" %></p>

    <% @blobs.each do |blob| %>
        <p>‚ô£Ô∏è <%=blob.class %>.#<%= blob.id %>
            (<b><%=blob.name %></b>,
            <!-- https://api.rubyonrails.org/classes/ActiveStorage/Blob/Analyzable.html -->
                representable=<%=  blob.representable? %>,
                analyzed=<%=  blob.analyzed? rescue :boh %>,
                identified=<%=  blob.identified? rescue :boh %>,
                content_type=<b><%=  blob.content_type %></b>):
            <%= 'üé•VIDEO' if blob.video? %>
            <%= 'üîàaudio' if blob.audio? %>
            <%= 'üå†image' if blob.image? %>
            <%= 'üàπpdf' if blob.content_type == 'application/pdf' %>
            url=<%= link_to  blob.blob.signed_id,rails_blob_url(blob) %>
        </p>
    <% end %>
      <h3>Pipeline:</h3>

    <%= @pipeline_body_result[:output].to_s.html_safe %>
